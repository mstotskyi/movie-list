{"version":3,"sources":["redux/actions.tsx","redux/reducers.tsx","redux/store.tsx","components/Searchbar/SearchBar.tsx","components/MovieGalleryItem/MovieGalleryItem.tsx","components/Loader/Loader.tsx","redux/selectors.tsx","components/MovieGallery/MovieGallery.tsx","components/Pagination/Pagination.tsx","App.js","services/apiService.tsx","index.js","components/Searchbar/Searchbar.module.css","components/MovieGalleryItem/MovieGalleryItem.module.css","components/MovieGallery/MovieGallery.module.css"],"names":["searchMovieAction","createAction","resetStorAction","loadMoreAction","getTotalMovieAction","currentPage","queryAction","initialState","movie","totalResult","pageSize","searchQuery","title","year","type","persistConfig","key","version","storage","moviesReducer","createReducer","builder","addCase","state","_ref","payload","concat","_toConsumableArray","arguments","length","undefined","_ref3","totalResultReducer","_ref4","currentPageReducer","_ref5","searchQueryReducer","_ref6","rootReducer","combineReducers","persistedReducer","persistReducer","store","configureStore","reducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","persistor","persistStore","Searchbar","_errors$title","_errors$year","handleSubmitForm","dispatch","useDispatch","_useForm","useForm","mode","register","handleSubmit","reset","errors","formState","_jsx","className","styles","children","_jsxs","SearchForm","onSubmit","data","FormControl","SearchForm__input","TextField","_objectSpread","fullWidth","defaultValue","required","id","label","name","variant","autoComplete","autoFocus","error","helperText","message","pattern","value","InputLabel","Select","placeholder","MenuItem","Button","SearchForm__button","MovieGalleryItem","movies","_Fragment","map","src","Poster","alt","Title","MovieGalleryItem__image","Year","imdbID","Spinner","style","position","top","left","transform","Circles","height","width","color","ariaLabel","wrapperClass","visible","getMovies","getTotalResult","getCurrentPage","getSearchQuery","MovieGallery","showSpinner","status","useSelector","alert","PaginationPages","handleOnClick","currPage","pages","Math","ceil","Stack","spacing","Pagination","count","page","Number","onChange","_","num","showFirstButton","showLastButton","newMoviesApiService","MoviesApiService","_classCallCheck","total","response","this","_createClass","_this","URL","fetch","then","json","getTotal","totalResults","get","set","newQuery","newQueryResponse","App","_useState","useState","_useState2","_slicedToArray","setStatus","_useState3","_useState4","setShowSpinner","useEffect","resetPage","fetchMovies","result","Search","catch","changePage","window","scrollTo","document","documentElement","scrollHeight","behavior","ReactDOM","createRoot","getElementById","render","React","StrictMode","PersistGate","loading","Provider","module","exports"],"mappings":"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","file":"static/js/main.8f4de458.chunk.js","sourcesContent":["import { createAction } from \"@reduxjs/toolkit\";\r\nimport { Options, TypesQuery } from \"../services/types\";\r\n\r\nexport const searchMovieAction = createAction<Options[]>(\"movie/searchMovie\");\r\n\r\nexport const resetStorAction = createAction<[]>(\"store/resetStore\");\r\n\r\nexport const loadMoreAction = createAction<Options[]>(\"movie/loadMore\");\r\n\r\nexport const getTotalMovieAction = createAction<number>(\"movie/totalResult\");\r\n\r\nexport const currentPage = createAction<number>(\"page/currentPage\");\r\n\r\nexport const queryAction = createAction<TypesQuery>(\"query/searchQuery\");\r\n","import { createReducer, combineReducers } from \"@reduxjs/toolkit\";\r\nimport { persistReducer } from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\";\r\n\r\nimport {\r\n  searchMovieAction,\r\n  resetStorAction,\r\n  loadMoreAction,\r\n  getTotalMovieAction,\r\n  currentPage,\r\n  queryAction,\r\n} from \"./actions\";\r\nimport { Options, TypesQuery } from \"../services/types\";\r\n\r\nexport type RootState = ReturnType<typeof rootReducer>;\r\n\r\ninterface Props {\r\n  movie: Options[];\r\n  totalResult: number;\r\n  currentPage: number;\r\n  pageSize: number;\r\n  searchQuery: TypesQuery;\r\n}\r\n\r\nconst initialState = {\r\n  movie: [],\r\n  totalResult: 0,\r\n  currentPage: 1,\r\n  pageSize: 10,\r\n  searchQuery: {\r\n    title: \"\",\r\n    year: \"\",\r\n    type: \"\",\r\n  },\r\n} as Props;\r\n\r\nconst persistConfig = {\r\n  key: \"movies\",\r\n  version: 1,\r\n  storage,\r\n};\r\n\r\nconst moviesReducer = createReducer(initialState.movie, (builder) => {\r\n  builder\r\n    .addCase(searchMovieAction, (state, { payload }) => {\r\n      return [...state, ...payload];\r\n    })\r\n    .addCase(resetStorAction, (state = initialState.movie, { payload }) => {\r\n      return [...payload];\r\n    })\r\n    .addCase(loadMoreAction, (state, { payload }) => {\r\n      return [...payload];\r\n    });\r\n});\r\n\r\nconst totalResultReducer = createReducer(\r\n  initialState.totalResult,\r\n  (builder) => {\r\n    builder.addCase(getTotalMovieAction, (state, { payload }) => {\r\n      return payload;\r\n    });\r\n  }\r\n);\r\n\r\nconst currentPageReducer = createReducer(\r\n  initialState.currentPage,\r\n  (builder) => {\r\n    builder.addCase(currentPage, (state, { payload }) => {\r\n      return payload;\r\n    });\r\n  }\r\n);\r\n\r\nconst searchQueryReducer = createReducer(\r\n  initialState.searchQuery,\r\n  (builder) => {\r\n    builder.addCase(queryAction, (state, { payload }) => {\r\n      return payload;\r\n    });\r\n  }\r\n);\r\n\r\nconst rootReducer = combineReducers({\r\n  movie: moviesReducer,\r\n  totalResult: totalResultReducer,\r\n  currentPage: currentPageReducer,\r\n  searchQuery: searchQueryReducer,\r\n});\r\n\r\nexport const persistedReducer = persistReducer(persistConfig, rootReducer);\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\n\r\nimport logger from \"redux-logger\";\r\nimport {\r\n  persistStore,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from \"redux-persist\";\r\nimport { persistedReducer } from \"./reducers\";\r\n\r\nexport const store = configureStore({\r\n  reducer: persistedReducer,\r\n  middleware: (getDefaultMiddleware) =>\r\n    getDefaultMiddleware({\r\n      serializableCheck: {\r\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n      },\r\n    }).concat(logger),\r\n});\r\n\r\nexport const persistor = persistStore(store);\r\n","import TextField from \"@mui/material/TextField\";\r\nimport Button from \"@mui/material/Button\";\r\nimport styles from \"../Searchbar/Searchbar.module.css\";\r\nimport Select from \"@mui/material/Select\";\r\nimport MenuItem from \"@mui/material/MenuItem\";\r\nimport FormControl from \"@mui/material/FormControl\";\r\nimport InputLabel from \"@mui/material/InputLabel\";\r\nimport { useForm, SubmitHandler } from \"react-hook-form\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nimport { queryAction } from \"../../redux/actions\";\r\n\r\ninterface Props {\r\n  handleSubmitForm: (data: {}) => void;\r\n}\r\n\r\ntype Inputs = {\r\n  title: string;\r\n  year: string;\r\n  type: string;\r\n};\r\n\r\nexport function Searchbar({ handleSubmitForm }: Props) {\r\n  const dispatch = useDispatch();\r\n\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    reset,\r\n    formState: { errors },\r\n  } = useForm<Inputs>({ mode: \"onBlur\" });\r\n\r\n  const onSubmit: SubmitHandler<Inputs> = (data) => {\r\n    handleSubmitForm(data);\r\n    dispatch(queryAction(data));\r\n    reset();\r\n  };\r\n\r\n  return (\r\n    <header className={styles.Searchbar}>\r\n      <form className={styles.SearchForm} onSubmit={handleSubmit(onSubmit)}>\r\n        <FormControl className={styles.SearchForm__input}>\r\n          <TextField\r\n            fullWidth\r\n            defaultValue=\"\"\r\n            {...register(\"title\", { required: \"This field is required\" })}\r\n            id=\"outlined-basic\"\r\n            label=\"Search by title\"\r\n            name=\"title\"\r\n            variant=\"outlined\"\r\n            type=\"text\"\r\n            autoComplete=\"off\"\r\n            autoFocus\r\n            error={errors?.title ? true : false}\r\n            helperText={(errors?.title && errors?.title?.message) || \" \"}\r\n          />\r\n        </FormControl>\r\n        <FormControl className={styles.SearchForm__input}>\r\n          {\" \"}\r\n          <TextField\r\n            fullWidth\r\n            defaultValue=\"\"\r\n            {...register(\"year\", {\r\n              pattern: {\r\n                value: /^[1-9][0-9]{3}$/,\r\n                message: \"enter the year in 'yyyy' format\",\r\n              },\r\n            })}\r\n            id=\"outlined-basic\"\r\n            label=\"Search by year\"\r\n            name=\"year\"\r\n            variant=\"outlined\"\r\n            type=\"numeric\"\r\n            autoComplete=\"off\"\r\n            title=\"Year\"\r\n            error={errors?.year ? true : false}\r\n            helperText={(errors?.year && errors?.year?.message) || \" \"}\r\n          />\r\n        </FormControl>\r\n        <FormControl className={styles.SearchForm__input}>\r\n          <InputLabel id=\"demo-select-small\">Type</InputLabel>\r\n\r\n          <Select\r\n            fullWidth\r\n            defaultValue=\"\"\r\n            {...register(\"type\")}\r\n            label=\"Type\"\r\n            placeholder=\"Type\"\r\n          >\r\n            <MenuItem value=\"movie\">movie</MenuItem>\r\n            <MenuItem value=\"series\">series</MenuItem>\r\n            <MenuItem value=\"episode\">episode</MenuItem>\r\n          </Select>\r\n        </FormControl>\r\n        <Button\r\n          variant=\"contained\"\r\n          type=\"submit\"\r\n          className={styles.SearchForm__button}\r\n        >\r\n          Search\r\n        </Button>\r\n      </form>\r\n    </header>\r\n  );\r\n}\r\n","import styles from \"../MovieGalleryItem/MovieGalleryItem.module.css\";\r\nimport { Options } from \"../../services/types\";\r\n\r\ninterface IMovies {\r\n  movies: Options[];\r\n}\r\n\r\nexport function MovieGalleryItem({ movies }: IMovies) {\r\n  return movies.length > 0 ? (\r\n    <>\r\n      {movies.map((movie) => (\r\n        <li key={movie.imdbID} className={styles.MovieGalleryItem}>\r\n          <img\r\n            src={movie.Poster}\r\n            alt={movie.Title}\r\n            data-source={movie.Poster}\r\n            className={styles.MovieGalleryItem__image}\r\n          />\r\n          <p>Title: {movie.Title}</p>\r\n          <p>Year: {movie.Year}</p>\r\n          <p>imdbID: {movie.imdbID}</p>\r\n        </li>\r\n      ))}\r\n    </>\r\n  ) : (\r\n    <p>No such found</p>\r\n  );\r\n}\r\n","import { Circles } from \"react-loader-spinner\";\r\n\r\nexport default function Spinner() {\r\n  const style: {} = {\r\n    position: \"fixed\",\r\n    top: \"50%\",\r\n    left: \"50%\",\r\n    transform: \"translate(-50%, -50%)\",\r\n  };\r\n  return (\r\n    <div style={style}>\r\n      <Circles\r\n        height=\"80\"\r\n        width=\"80\"\r\n        color=\"#4fa94d\"\r\n        ariaLabel=\"circles-loading\"\r\n        wrapperClass=\"\"\r\n        visible={true}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import { Options, TypesQuery } from \"../services/types\";\r\n\r\nexport const getMovies = (state: { movie: Options[] }) => state.movie;\r\nexport const getTotalResult = (state: { totalResult: number }) =>\r\n  state.totalResult;\r\nexport const getCurrentPage = (state: { currentPage: number }) =>\r\n  state.currentPage;\r\nexport const getSearchQuery = (state: { searchQuery: TypesQuery }) =>\r\n  state.searchQuery;\r\n","import styles from \"../MovieGallery/MovieGallery.module.css\";\r\nimport { MovieGalleryItem } from \"../MovieGalleryItem/MovieGalleryItem\";\r\nimport Spinner from \"../Loader/Loader\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport { getMovies } from \"../../redux/selectors\";\r\n\r\ninterface Props {\r\n  showSpinner: boolean;\r\n  status: string;\r\n}\r\n\r\nexport function MovieGallery({ showSpinner, status }: Props) {\r\n  const movies = useSelector(getMovies);\r\n\r\n  if (status === \"init\") {\r\n    return <h1>Hello! Search something!</h1>;\r\n  }\r\n  if (status === \"pending\") {\r\n    return <Spinner />;\r\n  }\r\n  if (status === \"success\") {\r\n    return movies ? (\r\n      <>\r\n        <ul className={styles.MovieGallery}>\r\n          <MovieGalleryItem movies={movies} />\r\n        </ul>\r\n        {showSpinner && <Spinner />}\r\n      </>\r\n    ) : (\r\n      <h1>Sorry, nothing was found for your query!</h1>\r\n    );\r\n  }\r\n  if (status === \"error\") {\r\n    alert(\"ERROR!!\");\r\n  }\r\n}\r\n","import Pagination from \"@mui/material/Pagination\";\r\nimport Stack from \"@mui/material/Stack\";\r\nimport { getTotalResult, getCurrentPage } from \"../../redux/selectors\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { currentPage } from \"../../redux/actions\";\r\n\r\ninterface Props {\r\n  handleOnClick: (data: {}) => void;\r\n}\r\n\r\nexport function PaginationPages({ handleOnClick }: Props) {\r\n  const totalResult = useSelector(getTotalResult);\r\n  const currPage = useSelector(getCurrentPage);\r\n  const dispatch = useDispatch();\r\n\r\n  const pages = Math.ceil(totalResult / 10);\r\n\r\n  return (\r\n    <Stack spacing={2}>\r\n      <Pagination\r\n        count={pages}\r\n        page={Number(currPage)}\r\n        onChange={(_, num) => (dispatch(currentPage(num)), handleOnClick(num))}\r\n        showFirstButton\r\n        showLastButton\r\n      />\r\n    </Stack>\r\n  );\r\n}\r\n","import \"./App.css\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { Searchbar } from \"./components/Searchbar/SearchBar\";\r\nimport { MovieGallery } from \"./components/MovieGallery/MovieGallery\";\r\nimport { PaginationPages } from \"./components/Pagination/Pagination\";\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport MoviesApiService from \"./services/apiService\";\r\nimport {\r\n  searchMovieAction,\r\n  resetStorAction,\r\n  loadMoreAction,\r\n  getTotalMovieAction,\r\n} from \"./redux/actions\";\r\nimport { getMovies, getSearchQuery } from \"./redux/selectors\";\r\n\r\nconst newMoviesApiService = new MoviesApiService();\r\n\r\nfunction App() {\r\n  const [status, setStatus] = useState(\"\");\r\n  const [showSpinner, setShowSpinner] = useState(false);\r\n\r\n  const movie = useSelector(getMovies);\r\n  const searchQuery = useSelector(getSearchQuery);\r\n\r\n  useEffect(() => {\r\n    movie.length === 0 ? setStatus(\"init\") : setStatus(\"success\");\r\n  }, [movie.length]);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const handleSubmitForm = (data) => {\r\n    setStatus(\"pending\");\r\n    dispatch(resetStorAction([]));\r\n\r\n    newMoviesApiService.searchQuery = data;\r\n    newMoviesApiService.resetPage();\r\n    newMoviesApiService\r\n      .fetchMovies()\r\n      .then((result) => {\r\n        dispatch(searchMovieAction(result.Search));\r\n        dispatch(getTotalMovieAction(result.totalResults));\r\n        setStatus(\"success\");\r\n      })\r\n      .catch((error) => {\r\n        setStatus(\"error\");\r\n      });\r\n  };\r\n\r\n  const handleOnClick = (page) => {\r\n    setShowSpinner(true);\r\n    newMoviesApiService.searchQuery = searchQuery;\r\n\r\n    newMoviesApiService.changePage(page);\r\n    newMoviesApiService\r\n      .fetchMovies()\r\n      .then((result) => {\r\n        dispatch(loadMoreAction(result.Search));\r\n        setShowSpinner(false);\r\n        setStatus(\"success\");\r\n        window.scrollTo({\r\n          top: document.documentElement.scrollHeight,\r\n          behavior: \"smooth\",\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        setStatus(\"error\");\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Searchbar handleSubmitForm={handleSubmitForm} />\r\n      <MovieGallery status={status} showSpinner={showSpinner}></MovieGallery>\r\n      <PaginationPages handleOnClick={handleOnClick} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","export default class MoviesApiService {\r\n  searchQuery: {\r\n    title: string;\r\n    year: string;\r\n    type: string;\r\n  };\r\n  page: number;\r\n  total: number;\r\n  response: boolean;\r\n\r\n  constructor() {\r\n    this.searchQuery = {\r\n      title: \"\",\r\n      year: \"\",\r\n      type: \"\",\r\n    };\r\n    this.page = 1;\r\n    this.total = 0;\r\n    this.response = false;\r\n  }\r\n\r\n  fetchMovies() {\r\n    const API_KEY = \"a5f3b75f\";\r\n    const BASE_URL = \"https://www.omdbapi.com/\";\r\n    const URL = `${BASE_URL}?s=${this.searchQuery.title}&y=${this.searchQuery.year}&type=${this.searchQuery.type}&apikey=${API_KEY}&page=${this.page}`;\r\n    return fetch(URL)\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        this.getTotal(data.totalResults);\r\n\r\n        return data;\r\n      });\r\n  }\r\n\r\n  changePage(page: number) {\r\n    this.page = page;\r\n  }\r\n\r\n  resetPage() {\r\n    this.page = 1;\r\n  }\r\n\r\n  getTotal(totalResults: number) {\r\n    this.total = totalResults;\r\n  }\r\n\r\n  get query() {\r\n    return this.searchQuery;\r\n  }\r\n\r\n  get queryResponse() {\r\n    return this.response;\r\n  }\r\n\r\n  set query(newQuery) {\r\n    this.searchQuery = newQuery;\r\n  }\r\n\r\n  set queryResponse(newQueryResponse) {\r\n    this.response = newQueryResponse;\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { Provider } from \"react-redux\";\r\nimport ReactDOM from \"react-dom/client\";\r\nimport \"./index.css\";\r\nimport { PersistGate } from \"redux-persist/integration/react\";\r\nimport { store, persistor } from \"./redux/store\";\r\nimport App from \"./App.js\";\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\r\n\r\nroot.render(\r\n  <React.StrictMode>\r\n    <PersistGate loading={null} persistor={persistor}>\r\n      <Provider store={store}>\r\n        <App />\r\n      </Provider>\r\n    </PersistGate>\r\n  </React.StrictMode>\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Searchbar\":\"Searchbar_Searchbar__1GmgG\",\"SearchForm\":\"Searchbar_SearchForm__2CWGu\",\"SearchForm__button\":\"Searchbar_SearchForm__button__2bHVx\",\"SearchForm__input\":\"Searchbar_SearchForm__input__QfOIu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MovieGalleryItem\":\"MovieGalleryItem_MovieGalleryItem__EsNtc\",\"MovieGalleryItem__image\":\"MovieGalleryItem_MovieGalleryItem__image__2FvGj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MovieGallery\":\"MovieGallery_MovieGallery__2AioG\"};"],"sourceRoot":""}