{"version":3,"sources":["components/Searchbar/Searchbar.module.css","components/MovieGallery/MovieGallery.module.css","components/MovieGalleryItem/MovieGalleryItem.module.css","services/apiService.tsx","components/MovieGalleryItem/MovieGalleryItem.tsx","components/Loader/Loader.tsx","components/MovieGallery/MovieGallery.tsx","components/Searchbar/SearchBar.tsx","App.js","index.js"],"names":["module","exports","MoviesApiService","_classCallCheck","searchQueryName","searchQueryYear","searchQueryType","page","total","response","this","_createClass","key","value","_this","URL","concat","fetch","then","json","data","getTotal","totalResults","get","set","newQueryName","newQueryYear","newQueryType","newQueryResponse","MovieGalleryItem","_ref","movies","length","_jsx","_Fragment","children","map","movie","_jsxs","className","styles","src","Poster","alt","Title","MovieGalleryItem__image","Year","imdbID","Spiner","style","position","top","left","transform","Circles","height","width","color","ariaLabel","wrapperClass","visible","newPicsApiService","PicsApiService","MovieGallery","_useState","useState","_useState2","_slicedToArray","searchResults","setSearchResults","_useState3","_useState4","status","setStatus","_useState5","_useState6","showSpiner","setShowSpiner","useEffect","queryName","queryYear","queryType","resetPage","fetchMovies","result","Search","catch","error","MovieGallery__Button","type","onClick","e","incrementPage","prevState","_toConsumableArray","window","scrollTo","document","documentElement","scrollHeight","behavior","alert","Searchbar","getSearchQueryName","getSearchQueryYear","getSearchQueryType","setSearchQueryName","setSearchQueryYear","setSearchQueryType","handleOnChange","target","name","SearchForm","onSubmit","preventDefault","TextField","SearchForm__input","id","label","variant","required","autoComplete","autoFocus","onChange","title","inputProps","inputMode","pattern","Select","labelId","event","placeholder","MenuItem","Button","SearchForm__button","App","ReactDOM","createRoot","getElementById","render","React","StrictMode"],"mappings":"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","file":"static/js/main.efbbb7d4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Searchbar\":\"Searchbar_Searchbar__1GmgG\",\"SearchForm\":\"Searchbar_SearchForm__2CWGu\",\"SearchForm__button\":\"Searchbar_SearchForm__button__2bHVx\",\"SearchForm__input\":\"Searchbar_SearchForm__input__QfOIu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MovieGallery\":\"MovieGallery_MovieGallery__2AioG\",\"MovieGallery__Button\":\"MovieGallery_MovieGallery__Button__2nqxm\",\"MovieGallery__Butto\":\"MovieGallery_MovieGallery__Butto__2qdxT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MovieGalleryItem\":\"MovieGalleryItem_MovieGalleryItem__EsNtc\",\"MovieGalleryItem__image\":\"MovieGalleryItem_MovieGalleryItem__image__2FvGj\"};","export default class MoviesApiService {\r\n  searchQueryName: string;\r\n  searchQueryYear: string;\r\n  searchQueryType: string;\r\n  page: number;\r\n  total: number;\r\n  response: boolean;\r\n\r\n  constructor() {\r\n    this.searchQueryName = \" \";\r\n    this.searchQueryYear = \"\";\r\n    this.searchQueryType = \"\";\r\n    this.page = 1;\r\n    this.total = 0;\r\n    this.response = false;\r\n  }\r\n\r\n  fetchMovies() {\r\n    const API_KEY = \"a5f3b75f\";\r\n    const BASE_URL = \"http://www.omdbapi.com/\";\r\n    const URL = `${BASE_URL}?s=${this.searchQueryName}&y=${this.searchQueryYear}&type=${this.searchQueryType}&apikey=${API_KEY}&page=${this.page}`;\r\n    return fetch(URL)\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        this.getTotal(data.totalResults);\r\n\r\n        return data;\r\n      });\r\n  }\r\n\r\n  incrementPage() {\r\n    this.page += 1;\r\n  }\r\n\r\n  resetPage() {\r\n    this.page = 1;\r\n  }\r\n\r\n  getTotal(totalResults: number) {\r\n    this.total = totalResults;\r\n  }\r\n\r\n  get queryName() {\r\n    return this.searchQueryName;\r\n  }\r\n  get queryYear() {\r\n    return this.searchQueryYear;\r\n  }\r\n  get queryType() {\r\n    return this.searchQueryType;\r\n  }\r\n  get queryResponse() {\r\n    return this.response;\r\n  }\r\n\r\n  set queryName(newQueryName) {\r\n    this.searchQueryName = newQueryName;\r\n  }\r\n\r\n  set queryYear(newQueryYear) {\r\n    this.searchQueryYear = newQueryYear;\r\n  }\r\n\r\n  set queryType(newQueryType) {\r\n    this.searchQueryType = newQueryType;\r\n  }\r\n  set queryResponse(newQueryResponse) {\r\n    this.response = newQueryResponse;\r\n  }\r\n}\r\n","import styles from \"../MovieGalleryItem/MovieGalleryItem.module.css\";\r\nimport { Options } from \"../../services/types\";\r\n\r\ninterface IMovies {\r\n  movies: Options[];\r\n}\r\n\r\nexport function MovieGalleryItem({ movies }: IMovies) {\r\n  return movies.length > 0 ? (\r\n    <>\r\n      {movies.map((movie) => (\r\n        <li key={movie.imdbID} className={styles.MovieGalleryItem}>\r\n          <img\r\n            src={movie.Poster}\r\n            alt={movie.Title}\r\n            data-source={movie.Poster}\r\n            className={styles.MovieGalleryItem__image}\r\n          />\r\n          <p>Title: {movie.Title}</p>\r\n          <p>Year: {movie.Year}</p>\r\n          <p>imdbID: {movie.imdbID}</p>\r\n        </li>\r\n      ))}\r\n    </>\r\n  ) : (\r\n    <p>No such found</p>\r\n  );\r\n}\r\n","import { Circles } from \"react-loader-spinner\";\r\n\r\nexport default function Spiner() {\r\n  const style: {} = {\r\n    position: \"fixed\",\r\n    top: \"50%\",\r\n    left: \"50%\",\r\n    transform: \"translate(-50%, -50%)\",\r\n  };\r\n  return (\r\n    <div style={style}>\r\n      <Circles\r\n        height=\"80\"\r\n        width=\"80\"\r\n        color=\"#4fa94d\"\r\n        ariaLabel=\"circles-loading\"\r\n        wrapperClass=\"\"\r\n        visible={true}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import { useState, useEffect } from \"react\";\r\nimport styles from \"../MovieGallery/MovieGallery.module.css\";\r\nimport PicsApiService from \"../../services/apiService\";\r\nimport { MovieGalleryItem } from \"../MovieGalleryItem/MovieGalleryItem\";\r\nimport Spiner from \"../Loader/Loader\";\r\n// import Button from \"@mui/material/Button\";\r\nimport { Options } from \"../../services/types\";\r\nconst newPicsApiService = new PicsApiService();\r\n\r\ninterface Props {\r\n  searchQueryName: string;\r\n  searchQueryYear: string;\r\n  searchQueryType: string;\r\n}\r\n\r\nexport function MovieGallery({\r\n  searchQueryName,\r\n  searchQueryYear,\r\n  searchQueryType,\r\n}: Props) {\r\n  const [searchResults, setSearchResults] = useState<Options[]>([]);\r\n  const [status, setStatus] = useState<string>(\"init\");\r\n  const [showSpiner, setShowSpiner] = useState<boolean>(false);\r\n\r\n  useEffect(() => {\r\n    if (searchQueryName === \"\") {\r\n      return;\r\n    }\r\n    setStatus(\"pending\");\r\n    newPicsApiService.queryName = searchQueryName;\r\n    newPicsApiService.queryYear = searchQueryYear;\r\n    newPicsApiService.queryType = searchQueryType;\r\n    newPicsApiService.resetPage();\r\n    newPicsApiService\r\n      .fetchMovies()\r\n      .then((result) => {\r\n        setSearchResults(result.Search);\r\n        setStatus(\"success\");\r\n      })\r\n      .catch((error) => {\r\n        setStatus(\"error\");\r\n      });\r\n  }, [searchQueryName, searchQueryYear, searchQueryType]);\r\n\r\n  const handleOnClick = (\r\n    e: React.MouseEvent<HTMLButtonElement, MouseEvent>\r\n  ) => {\r\n    newPicsApiService.incrementPage();\r\n    newPicsApiService\r\n      .fetchMovies()\r\n      .then((result) => {\r\n        setSearchResults((prevState) => [...prevState, ...result.Search]);\r\n        setShowSpiner(false);\r\n        setStatus(\"success\");\r\n        window.scrollTo({\r\n          top: document.documentElement.scrollHeight,\r\n          behavior: \"smooth\",\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        setStatus(\"error\");\r\n      });\r\n  };\r\n\r\n  if (status === \"init\") {\r\n    return <h1>Hallo! Search something!</h1>;\r\n  }\r\n  if (status === \"pending\") {\r\n    return <Spiner />;\r\n  }\r\n  if (status === \"success\") {\r\n    return (\r\n      <>\r\n        {searchResults ? (\r\n          <>\r\n            <ul className={styles.MovieGallery}>\r\n              <MovieGalleryItem movies={searchResults} />\r\n            </ul>\r\n            {showSpiner && <Spiner />}\r\n\r\n            <button\r\n              className={styles.MovieGallery__Button}\r\n              type=\"button\"\r\n              onClick={handleOnClick}\r\n            >\r\n              LoadMore\r\n            </button>\r\n          </>\r\n        ) : (\r\n          <p>Sorry, nothing was found for your query!</p>\r\n        )}\r\n\r\n        {/* <Button\r\n              className={styles.MovieGallery__Button}\r\n              variant=\"contained\"\r\n              onClick={handleOnClick}\r\n            >\r\n              ShowMore\r\n            </Button> */}\r\n      </>\r\n    );\r\n  }\r\n  if (status === \"error\") {\r\n    alert(\"ERROR!!\");\r\n  }\r\n}\r\n","import { useState } from \"react\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Button from \"@mui/material/Button\";\r\nimport styles from \"../Searchbar/Searchbar.module.css\";\r\nimport Select, { SelectChangeEvent } from \"@mui/material/Select\";\r\nimport MenuItem from \"@mui/material/MenuItem\";\r\n// import InputLabel from \"@mui/material/InputLabel\";\r\n\r\ninterface Props {\r\n  getSearchQueryName: (searchQueryName: string) => void;\r\n  getSearchQueryYear: (searchQueryYear: string) => void;\r\n  getSearchQueryType: (searchQueryType: string) => void;\r\n}\r\nexport function Searchbar({\r\n  getSearchQueryName,\r\n  getSearchQueryYear,\r\n  getSearchQueryType,\r\n}: Props) {\r\n  const [searchQueryName, setSearchQueryName] = useState(\"\");\r\n  const [searchQueryYear, setSearchQueryYear] = useState(\"\");\r\n  const [searchQueryType, setSearchQueryType] = useState(\"\");\r\n\r\n  const handleOnSubmit = (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n\r\n    getSearchQueryName(searchQueryName);\r\n    getSearchQueryYear(searchQueryYear);\r\n    getSearchQueryType(searchQueryType);\r\n    setSearchQueryName(\"\");\r\n    setSearchQueryYear(\"\");\r\n    setSearchQueryType(\"\");\r\n  };\r\n\r\n  const handleOnChange = (\r\n    e: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>\r\n  ) => {\r\n    switch (e.target.name) {\r\n      case \"title\":\r\n        setSearchQueryName(e.target.value);\r\n        break;\r\n      case \"year\":\r\n        setSearchQueryYear(e.target.value);\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const handleChange = (event: SelectChangeEvent) => {\r\n    setSearchQueryType(event.target.value as string);\r\n  };\r\n\r\n  return (\r\n    <header className={styles.Searchbar}>\r\n      <form className={styles.SearchForm} onSubmit={handleOnSubmit}>\r\n        <TextField\r\n          className={styles.SearchForm__input}\r\n          id=\"outlined-basic\"\r\n          label=\"Search by name\"\r\n          name=\"title\"\r\n          variant=\"outlined\"\r\n          value={searchQueryName}\r\n          required\r\n          type=\"text\"\r\n          autoComplete=\"off\"\r\n          autoFocus\r\n          onChange={handleOnChange}\r\n        />\r\n        <TextField\r\n          className={styles.SearchForm__input}\r\n          id=\"outlined-basic\"\r\n          label=\"Search by year\"\r\n          name=\"year\"\r\n          variant=\"outlined\"\r\n          value={searchQueryYear}\r\n          type=\"text\"\r\n          autoComplete=\"off\"\r\n          title=\"Year\"\r\n          inputProps={{ inputMode: \"numeric\", pattern: \"^[1-9][0-9]{3}$\" }}\r\n          onChange={handleOnChange}\r\n        />\r\n        <Select\r\n          labelId=\"demo-simple-select-label\"\r\n          id=\"demo-simple-select\"\r\n          value={searchQueryType}\r\n          label=\"Type\"\r\n          onChange={handleChange}\r\n          placeholder=\"Type\"\r\n        >\r\n          <MenuItem value=\"movie\">movie</MenuItem>\r\n          <MenuItem value=\"series\">series</MenuItem>\r\n          <MenuItem value=\"episode\">episode</MenuItem>\r\n        </Select>\r\n        <Button\r\n          variant=\"contained\"\r\n          type=\"submit\"\r\n          className={styles.SearchForm__button}\r\n        >\r\n          Search\r\n        </Button>\r\n      </form>\r\n    </header>\r\n  );\r\n}\r\n","import \"./App.css\";\r\nimport { useState } from \"react\";\r\nimport { MovieGallery } from \"./components/MovieGallery/MovieGallery\";\r\nimport { Searchbar } from \"./components/Searchbar/SearchBar\";\r\n\r\nfunction App() {\r\n  const [searchQueryName, setSearchQueryName] = useState(\"\");\r\n  const [searchQueryYear, setSearchQueryYear] = useState(\"\");\r\n  const [searchQueryType, setSearchQueryType] = useState(\"\");\r\n\r\n  const getSearchQueryName = (searchQueryName) =>\r\n    setSearchQueryName(searchQueryName);\r\n  const getSearchQueryYear = (searchQueryYear) =>\r\n    setSearchQueryYear(searchQueryYear);\r\n  const getSearchQueryType = (searchQueryType) =>\r\n    setSearchQueryType(searchQueryType);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Searchbar\r\n        getSearchQueryName={getSearchQueryName}\r\n        getSearchQueryYear={getSearchQueryYear}\r\n        getSearchQueryType={getSearchQueryType}\r\n      />\r\n      <MovieGallery\r\n        searchQueryName={searchQueryName}\r\n        searchQueryYear={searchQueryYear}\r\n        searchQueryType={searchQueryType}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom/client\";\r\nimport \"./index.css\";\r\nimport App from \"./App.js\";\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\r\nroot.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>\r\n);\r\n"],"sourceRoot":""}